<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login.jsp" />
		<property name="unauthorizedUrl" value="/login.jsp" />
		<property name="filterChainDefinitions">
			<value>
				/account/** = anon
				<!-- /admin/** = authc, roles[ROLE_ADMIN]
				/front/** = authc, roles[ROLE_USER] -->
			</value>
		</property>
	</bean>

	<bean id="secureRemoteInvocationExecutor"
		class="org.apache.shiro.spring.remoting.SecureRemoteInvocationExecutor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="realm" />
	</bean>

	<bean id="realm" class="com.maogh.blog.account.security.UserRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher"></property>
	</bean>

	<bean id="credentialsMatcher"
		class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="SHA-512"></property>
		<property name="hashIterations" value="1024"></property>
		<property name="hashSalted" value="false"></property>
		<property name="storedCredentialsHexEncoded" value="false"></property>
	</bean>
</beans>